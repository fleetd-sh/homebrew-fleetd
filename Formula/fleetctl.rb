# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Fleetctl < Formula
  desc "Fleet management CLI tool for edge device orchestration"
  homepage "https://fleetd.sh"
  version "0.0.1-rc.5"
  license "MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/fleetd-sh/fleetd/releases/download/v0.0.1-rc.5/fleetctl_0.0.1-rc.5_darwin_amd64.tar.gz"
      sha256 "a3589275481f6f6ab1a60d85a3d6429349b2e50f95ad1bb455222cb8ccb8f538"

      def install
        bin.install "fleetctl"

        # Install bash completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "bash")
        (bash_completion/"fleetctl").write output

        # Install zsh completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "zsh")
        (zsh_completion/"_fleetctl").write output

        # Install fish completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "fish")
        (fish_completion/"fleetctl.fish").write output
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/fleetd-sh/fleetd/releases/download/v0.0.1-rc.5/fleetctl_0.0.1-rc.5_darwin_arm64.tar.gz"
      sha256 "c59046631762058dc0f1d9b71c82c42e0d7b89777e777b8ffbf19b8ba7b511c3"

      def install
        bin.install "fleetctl"

        # Install bash completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "bash")
        (bash_completion/"fleetctl").write output

        # Install zsh completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "zsh")
        (zsh_completion/"_fleetctl").write output

        # Install fish completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "fish")
        (fish_completion/"fleetctl.fish").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? && Hardware::CPU.is_64_bit?
      url "https://github.com/fleetd-sh/fleetd/releases/download/v0.0.1-rc.5/fleetctl_0.0.1-rc.5_linux_amd64.tar.gz"
      sha256 "5a9b50b3d9945e765788fe7b3e7236dbfbdb39eff4844d396c98b79a7637880b"
      def install
        bin.install "fleetctl"

        # Install bash completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "bash")
        (bash_completion/"fleetctl").write output

        # Install zsh completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "zsh")
        (zsh_completion/"_fleetctl").write output

        # Install fish completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "fish")
        (fish_completion/"fleetctl.fish").write output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/fleetd-sh/fleetd/releases/download/v0.0.1-rc.5/fleetctl_0.0.1-rc.5_linux_arm64.tar.gz"
      sha256 "957c013ff1a85ca38814adb01fc0d3afaee824c1bb9fbbae303e34231a22d16a"
      def install
        bin.install "fleetctl"

        # Install bash completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "bash")
        (bash_completion/"fleetctl").write output

        # Install zsh completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "zsh")
        (zsh_completion/"_fleetctl").write output

        # Install fish completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "fish")
        (fish_completion/"fleetctl.fish").write output
      end
    end
  end

  test do
    system "#{bin}/fleetctl", "--version"
  end
end
