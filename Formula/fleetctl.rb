# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Fleetctl < Formula
  desc "Fleet management CLI tool for edge device orchestration"
  homepage "https://fleetd.sh"
  version "0.0.1-rc.0"
  license "MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/fleetd-sh/fleetd/releases/download/v0.0.1-rc.0/fleetctl_0.0.1-rc.0_darwin_amd64.tar.gz"
      sha256 "e06150d2bd83cae2392529c52852c10da21802d44427979e3dbf9dbe7bdcfaff"

      def install
        bin.install "fleetctl"

        # Install bash completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "bash")
        (bash_completion/"fleetctl").write output

        # Install zsh completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "zsh")
        (zsh_completion/"_fleetctl").write output

        # Install fish completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "fish")
        (fish_completion/"fleetctl.fish").write output
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/fleetd-sh/fleetd/releases/download/v0.0.1-rc.0/fleetctl_0.0.1-rc.0_darwin_arm64.tar.gz"
      sha256 "7c1a2186d231da1295305351d09bd0072fe587a61a3dbe6225f6bf3a1b1e5428"

      def install
        bin.install "fleetctl"

        # Install bash completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "bash")
        (bash_completion/"fleetctl").write output

        # Install zsh completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "zsh")
        (zsh_completion/"_fleetctl").write output

        # Install fish completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "fish")
        (fish_completion/"fleetctl.fish").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? && Hardware::CPU.is_64_bit?
      url "https://github.com/fleetd-sh/fleetd/releases/download/v0.0.1-rc.0/fleetctl_0.0.1-rc.0_linux_amd64.tar.gz"
      sha256 "8b4dfa38251da9879bc0e45d874b5ff2d04beb0b32fdb39f41823ab8ac737b48"
      def install
        bin.install "fleetctl"

        # Install bash completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "bash")
        (bash_completion/"fleetctl").write output

        # Install zsh completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "zsh")
        (zsh_completion/"_fleetctl").write output

        # Install fish completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "fish")
        (fish_completion/"fleetctl.fish").write output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/fleetd-sh/fleetd/releases/download/v0.0.1-rc.0/fleetctl_0.0.1-rc.0_linux_arm64.tar.gz"
      sha256 "a8936fefc128cc45b2d634cf3d47bc08408c7d1a96439dc6b7cd2cb14993903b"
      def install
        bin.install "fleetctl"

        # Install bash completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "bash")
        (bash_completion/"fleetctl").write output

        # Install zsh completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "zsh")
        (zsh_completion/"_fleetctl").write output

        # Install fish completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "fish")
        (fish_completion/"fleetctl.fish").write output
      end
    end
  end

  test do
    system "#{bin}/fleetctl", "--version"
  end
end
