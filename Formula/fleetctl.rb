# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Fleetctl < Formula
  desc "Fleet management CLI tool for edge device orchestration"
  homepage "https://fleetd.sh"
  version "0.0.1-rc.4"
  license "MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/fleetd-sh/fleetd/releases/download/v0.0.1-rc.4/fleetctl_0.0.1-rc.4_darwin_amd64.tar.gz"
      sha256 "3dc85b9e6366f41deb9e4ff0b29f8c57009b8f655a1d723b7db28c2700ace91a"

      def install
        bin.install "fleetctl"

        # Install bash completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "bash")
        (bash_completion/"fleetctl").write output

        # Install zsh completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "zsh")
        (zsh_completion/"_fleetctl").write output

        # Install fish completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "fish")
        (fish_completion/"fleetctl.fish").write output
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/fleetd-sh/fleetd/releases/download/v0.0.1-rc.4/fleetctl_0.0.1-rc.4_darwin_arm64.tar.gz"
      sha256 "77680816d7a0410b150b7935fe74355ba72322b01172dfa2bdaa36917763d911"

      def install
        bin.install "fleetctl"

        # Install bash completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "bash")
        (bash_completion/"fleetctl").write output

        # Install zsh completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "zsh")
        (zsh_completion/"_fleetctl").write output

        # Install fish completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "fish")
        (fish_completion/"fleetctl.fish").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? && Hardware::CPU.is_64_bit?
      url "https://github.com/fleetd-sh/fleetd/releases/download/v0.0.1-rc.4/fleetctl_0.0.1-rc.4_linux_amd64.tar.gz"
      sha256 "4d4ae6ea340b718153b817abe4c92bc414a5020518db0fe99619998dbb5ac44d"
      def install
        bin.install "fleetctl"

        # Install bash completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "bash")
        (bash_completion/"fleetctl").write output

        # Install zsh completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "zsh")
        (zsh_completion/"_fleetctl").write output

        # Install fish completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "fish")
        (fish_completion/"fleetctl.fish").write output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/fleetd-sh/fleetd/releases/download/v0.0.1-rc.4/fleetctl_0.0.1-rc.4_linux_arm64.tar.gz"
      sha256 "9d67e9f9f8a644f6bb5d385eeb2ade7d7ab1ccd833daecc5ac6b5d8b634c5c56"
      def install
        bin.install "fleetctl"

        # Install bash completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "bash")
        (bash_completion/"fleetctl").write output

        # Install zsh completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "zsh")
        (zsh_completion/"_fleetctl").write output

        # Install fish completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "fish")
        (fish_completion/"fleetctl.fish").write output
      end
    end
  end

  test do
    system "#{bin}/fleetctl", "--version"
  end
end
