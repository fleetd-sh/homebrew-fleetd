# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Fleetctl < Formula
  desc "Fleet management CLI tool for edge device orchestration"
  homepage "https://fleetd.sh"
  version "0.0.1-rc.2"
  license "MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/fleetd-sh/fleetd/releases/download/v0.0.1-rc.2/fleetctl_0.0.1-rc.2_darwin_amd64.tar.gz"
      sha256 "e761700f2e12edd38ca174bed79b7b441aaf1c5710ab65e6ffedd65eaffc25dc"

      def install
        bin.install "fleetctl"

        # Install bash completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "bash")
        (bash_completion/"fleetctl").write output

        # Install zsh completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "zsh")
        (zsh_completion/"_fleetctl").write output

        # Install fish completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "fish")
        (fish_completion/"fleetctl.fish").write output
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/fleetd-sh/fleetd/releases/download/v0.0.1-rc.2/fleetctl_0.0.1-rc.2_darwin_arm64.tar.gz"
      sha256 "b31a4038547e89b50d3652f6824e7fa039e3039e1f82faa5fda0073da6ce2364"

      def install
        bin.install "fleetctl"

        # Install bash completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "bash")
        (bash_completion/"fleetctl").write output

        # Install zsh completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "zsh")
        (zsh_completion/"_fleetctl").write output

        # Install fish completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "fish")
        (fish_completion/"fleetctl.fish").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? && Hardware::CPU.is_64_bit?
      url "https://github.com/fleetd-sh/fleetd/releases/download/v0.0.1-rc.2/fleetctl_0.0.1-rc.2_linux_amd64.tar.gz"
      sha256 "79dc0a3a833bda289d3cffc55af55cdfbd1269b54a2892ffebf25eb4aceaafcc"
      def install
        bin.install "fleetctl"

        # Install bash completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "bash")
        (bash_completion/"fleetctl").write output

        # Install zsh completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "zsh")
        (zsh_completion/"_fleetctl").write output

        # Install fish completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "fish")
        (fish_completion/"fleetctl.fish").write output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/fleetd-sh/fleetd/releases/download/v0.0.1-rc.2/fleetctl_0.0.1-rc.2_linux_arm64.tar.gz"
      sha256 "a425f8a9fe5167f9afffc8f12164ff50b15bd0107654d04cf970c906b330a347"
      def install
        bin.install "fleetctl"

        # Install bash completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "bash")
        (bash_completion/"fleetctl").write output

        # Install zsh completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "zsh")
        (zsh_completion/"_fleetctl").write output

        # Install fish completions
        output = Utils.safe_popen_read("#{bin}/fleetctl", "completion", "fish")
        (fish_completion/"fleetctl.fish").write output
      end
    end
  end

  test do
    system "#{bin}/fleetctl", "--version"
  end
end
